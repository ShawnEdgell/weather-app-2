{"version":3,"file":"index-266de9d2.js","sources":["../../src/app.js"],"sourcesContent":["const API_BASE_URL = \"https://api.weatherapi.com/v1/forecast.json\";\nconst API_KEY = \"219a015ee939448aa0f195825231010\";\n\nlet currentPage = 1;\n\nconst fetchData = async (location = \"Toronto\") => {\n    const url = `${API_BASE_URL}?key=${API_KEY}&q=${location}&days=1&aqi=no&alerts=no`;\n\n    try {\n        const response = await fetch(url);\n        const data = await response.json();\n\n        if (data.error) {\n            throw new Error(data.error.message);\n        }\n\n        return data;\n    } catch (error) {\n        console.error(`Error fetching data for ${location}: ${error.message}`);\n        throw error;\n    }\n};\n\ndocument.getElementById(\"weatherForm\").addEventListener(\"submit\", async (event) => {\n    event.preventDefault();\n\n    document.getElementById(\"errorMsg\").style.display = \"none\";\n    document.getElementById(\"loading\").style.display = \"block\";\n\n    const locationInputElement = document.getElementById(\"locationInput\");\n    const locationValue = locationInputElement.value.trim();\n    const location = locationValue;\n\n    if (!location) {\n        document.getElementById(\"errorMsg\").innerText = \"Please provide a location.\";\n        document.getElementById(\"errorMsg\").style.display = \"block\";\n        document.getElementById(\"loading\").style.display = \"none\";\n        return;\n    }\n\n    try {\n        const data = await fetchData(location);\n        const processedData = processWeatherData(data);\n        updateUI(processedData);\n        currentPage = 1;\n\n        const forecastData = await fetch7DayForecast(location);\n        update7DayForecast(forecastData);\n\n        updateDateAndTime(location);\n    } catch (error) {\n        document.getElementById(\"errorMsg\").innerText = error;\n        document.getElementById(\"errorMsg\").style.display = \"block\";\n    } finally {\n        document.getElementById(\"loading\").style.display = \"none\";\n        locationInputElement.value = \"\";\n    }\n});\n\nwindow.addEventListener(\"load\", () => {\n    document.getElementById(\"locationInput\").value = \"\";\n});\n\ndocument.getElementById(\"searchButton\").addEventListener(\"click\", async () => {\n    const locationInputElement = document.getElementById(\"locationInput\");\n    const locationValue = locationInputElement.value.trim();\n    const location = locationValue;\n\n    if (!location) {\n        document.getElementById(\"errorMsg\").innerText = \"Please provide a location.\";\n        document.getElementById(\"errorMsg\").style.display = \"block\";\n        return;\n    }\n\n    searchAndUpdate(location);\n});\n\nconst searchAndUpdate = async (location) => {\n    document.getElementById(\"errorMsg\").style.display = \"none\";\n    document.getElementById(\"loading\").style.display = \"block\";\n\n    if (!location) {\n        document.getElementById(\"errorMsg\").innerText = \"Please provide a location.\";\n        document.getElementById(\"errorMsg\").style.display = \"block\";\n        document.getElementById(\"loading\").style.display = \"none\";\n        return;\n    }\n\n    try {\n        const data = await fetchData(location);\n        const processedData = processWeatherData(data);\n        updateUI(processedData);\n        currentPage = 1;\n\n        const forecastData = await fetch7DayForecast(location);\n        update7DayForecast(forecastData);\n\n        updateDateAndTime(location);\n    } catch (error) {\n        document.getElementById(\"errorMsg\").innerText = error;\n        document.getElementById(\"errorMsg\").style.display = \"block\";\n    } finally {\n        document.getElementById(\"loading\").style.display = \"none\";\n        document.getElementById(\"locationInput\").value = \"\";\n    }\n};\n\nwindow.addEventListener(\"load\", () => {\n    searchAndUpdate(\"Toronto\");\n});\n\ndocument.getElementById(\"searchButton\").addEventListener(\"click\", () => {\n    document.getElementById(\"locationInput\").value = \"\";\n});\n\n\nconst fetch7DayForecast = async (location) => {\n    try {\n        const response = await fetch(\n            `https://api.weatherapi.com/v1/forecast.json?key=${API_KEY}&q=${location}&days=7&aqi=no&alerts=no`\n        );\n        if (!response.ok) {\n            throw new Error('Unable to fetch 7-day forecast data.');\n        }\n        const data = await response.json();\n        return data.forecast.forecastday;\n    } catch (error) {\n        throw error;\n    }\n};\n\nconst update7DayForecast = (forecastData) => {\n    const forecastContainer = document.querySelector('.seven-day-forecast');\n    forecastContainer.innerHTML = '';\n\n    forecastData.forEach((day) => {\n        const forecastElement = document.createElement('div');\n        forecastElement.classList.add('forecast-day');\n\n        const date = new Date(day.date);\n        const dayOfWeek = date.toLocaleDateString('en-US', { weekday: 'long' });\n        const iconUrl = day.day.condition.icon;\n        const maxTemp = day.day.maxtemp_c;\n        const minTemp = day.day.mintemp_c;\n\n        forecastElement.innerHTML = `\n            <div class=\"forecast-day-icon\">\n                <img src=\"${iconUrl}\" alt=\"Weather Icon\">\n            </div>\n            <div class=\"forecast-day-info\">\n                <div class=\"forecast-day-name\">${dayOfWeek}</div>\n                <div class=\"forecast-day-temp\">${maxTemp}°C / ${minTemp}°C</div>\n            </div>\n        `;\n\n        forecastContainer.appendChild(forecastElement);\n    });\n};\n\nconst processWeatherData = (data) => {\n    const current = data.current;\n    const forecast = data.forecast.forecastday[0];\n\n    return {\n        location: `${data.location.name}`,\n        temperature: current.temp_c,\n        feelsLike: current.feelslike_c,\n        uv: current.uv,\n        description: current.condition.text,\n        humidity: current.humidity,\n        windSpeed: current.wind_kph,\n        icon: current.condition.icon,\n        daily_chance_of_rain: forecast.day.daily_chance_of_rain,\n        daily_chance_of_snow: forecast.day.daily_chance_of_snow,\n        hourly_forecast: forecast.hour,\n    };\n};\n\nconst updateUI = (data) => {\n    document.getElementById(\"location\").textContent = data.location;\n    document.getElementById(\"temperature\").textContent = `${data.temperature}°C`;\n    document.getElementById(\"feelsLikeValue\").textContent = `${data.feelsLike}°C`;\n    document.getElementById(\"uvIndexValue\").textContent = data.uv;\n    document.getElementById(\"description\").textContent = data.description;\n    document.getElementById(\"humidityValue\").textContent = `${data.humidity}%`;\n    document.getElementById(\"windSpeedValue\").textContent = `${data.windSpeed} kph`;\n    document.getElementById(\"icon\").setAttribute(\"src\", data.icon);\n\n    formatDateAndTime();\n    displayHourlyForecast(data.hourly_forecast);\n\n    document.getElementById(\"rainValue\").textContent = '';\n    document.getElementById(\"snowValue\").textContent = '';\n};\n\nconst formatDateAndTime = () => {\n    const currentDate = new Date();\n    const optionsForDate = { year: 'numeric', month: 'long', day: 'numeric' };\n    const dateString = currentDate.toLocaleDateString('en-US', optionsForDate);\n\n    let hours = currentDate.getHours();\n    const minutes = currentDate.getMinutes();\n    const ampm = hours >= 12 ? 'pm' : 'am';\n    hours = hours % 12;\n    hours = hours ? hours : 12;\n\n    const timeString = `${hours}:${minutes < 10 ? '0' + minutes : minutes}${ampm}`;\n\n    document.getElementById('currentDate').textContent = `currentDate: ${dateString}`;\n    document.getElementById('currentTime').textContent = `currentTime: ${timeString}`;\n};\n\nconst displayHourlyForecast = (hourlyForecast) => {\n    const forecastContainer = document.getElementById('hourlyForecast');\n    forecastContainer.innerHTML = '';\n\n    const currentDate = new Date();\n    const currentHour = currentDate.getHours();\n    const currentMinute = currentDate.getMinutes();\n\n    let nextHour = currentHour + 1;\n    if (currentMinute < 1) {\n        nextHour = currentHour;\n    }\n\n    hourlyForecast.forEach((hour) => {\n        const hourTimestamp = hour.time_epoch * 1000;\n        const hourDate = new Date(hourTimestamp);\n        const hourValue = hourDate.getHours();\n\n        if (hourValue >= nextHour) {\n            const hourElement = document.createElement('div');\n            hourElement.classList.add('hourly-forecast-item');\n\n            const iconImg = document.createElement('img');\n            iconImg.setAttribute('src', hour.condition.icon);\n            iconImg.setAttribute('alt', 'Weather Icon');\n\n            const formattedTime = `${hourValue % 12}:${hourValue % 12 === 0 ? '00' : '00'} ${hourValue >= 12 ? 'PM' : 'AM'}`;\n\n            const timeSpan = document.createElement('span');\n            timeSpan.textContent = formattedTime;\n\n            const temperatureSpan = document.createElement('span');\n            temperatureSpan.textContent = `${hour.temp_c}°C`;\n\n            hourElement.appendChild(iconImg);\n            hourElement.appendChild(timeSpan);\n            hourElement.appendChild(temperatureSpan);\n            forecastContainer.appendChild(hourElement);\n\n            nextHour++;\n        }\n    });\n};\n\nconst forecastContent = document.getElementById(\"forecast-content\");\n\nconst updateDateAndTime = (location) => {\n    fetch(`https://api.weatherapi.com/v1/current.json?key=${API_KEY}&q=${location}`)\n    .then((response) => response.json())\n    .then((data) => {\n        const date = new Date(data.location.localtime);\n        const optionsForDate = { year: 'numeric', month: 'long', day: 'numeric' };\n        const dateString = date.toLocaleDateString('en-US', optionsForDate);\n\n        let hours = date.getHours();\n        const minutes = date.getMinutes();\n        const ampm = hours >= 12 ? 'pm' : 'am';\n        hours = hours % 12;\n        hours = hours ? hours : 12;\n\n        const timeString = `${hours}:${minutes < 10 ? '0' + minutes : minutes} ${ampm}`;\n\n        document.getElementById('currentDate').textContent = `${dateString}`;\n        document.getElementById('currentTime').textContent = `${timeString}`;\n    })\n    .catch((error) => {\n        console.error(`Error fetching date and time data for ${location}: ${error.message}`);\n    });\n};\n\n"],"names":["API_KEY","currentPage","fetchData","async","location","url","response","fetch","data","json","error","Error","message","console","document","getElementById","addEventListener","event","preventDefault","style","display","locationInputElement","value","trim","innerText","processedData","processWeatherData","updateUI","forecastData","fetch7DayForecast","update7DayForecast","updateDateAndTime","window","searchAndUpdate","ok","forecast","forecastday","forecastContainer","querySelector","innerHTML","forEach","day","forecastElement","createElement","classList","add","dayOfWeek","Date","date","toLocaleDateString","weekday","iconUrl","condition","icon","maxTemp","maxtemp_c","minTemp","mintemp_c","appendChild","current","name","temperature","temp_c","feelsLike","feelslike_c","uv","description","text","humidity","windSpeed","wind_kph","daily_chance_of_rain","daily_chance_of_snow","hourly_forecast","hour","textContent","setAttribute","formatDateAndTime","displayHourlyForecast","currentDate","dateString","year","month","hours","getHours","minutes","getMinutes","ampm","timeString","hourlyForecast","currentHour","currentMinute","nextHour","hourTimestamp","time_epoch","hourValue","hourElement","iconImg","formattedTime","timeSpan","temperatureSpan","then","localtime","catch"],"mappings":"usBACMA,EAAU,kCAEhB,IAAIC,EAAc,EAElB,MAAMC,EAAYC,MAAOC,EAAW,aAChC,MAAMC,EAAM,mDAAuBL,OAAaI,4BAEhD,IACI,MAAME,QAAiBC,MAAMF,GACvBG,QAAaF,EAASG,OAE5B,GAAID,EAAKE,MACL,MAAM,IAAIC,MAAMH,EAAKE,MAAME,SAG/B,OAAOJ,CACV,CAAC,MAAOE,GAEL,MADAG,QAAQH,MAAM,2BAA2BN,MAAaM,EAAME,WACtDF,CACT,GAGLI,SAASC,eAAe,eAAeC,iBAAiB,UAAUb,MAAOc,IACrEA,EAAMC,iBAENJ,SAASC,eAAe,YAAYI,MAAMC,QAAU,OACpDN,SAASC,eAAe,WAAWI,MAAMC,QAAU,QAEnD,MAAMC,EAAuBP,SAASC,eAAe,iBAE/CX,EADgBiB,EAAqBC,MAAMC,OAGjD,IAAKnB,EAID,OAHAU,SAASC,eAAe,YAAYS,UAAY,6BAChDV,SAASC,eAAe,YAAYI,MAAMC,QAAU,aACpDN,SAASC,eAAe,WAAWI,MAAMC,QAAU,QAIvD,IACI,MAAMZ,QAAaN,EAAUE,GACvBqB,EAAgBC,EAAmBlB,GACzCmB,EAASF,GACTxB,EAAc,EAEd,MAAM2B,QAAqBC,EAAkBzB,GAC7C0B,EAAmBF,GAEnBG,EAAkB3B,EACrB,CAAC,MAAOM,GACLI,SAASC,eAAe,YAAYS,UAAYd,EAChDI,SAASC,eAAe,YAAYI,MAAMC,QAAU,OAC5D,CAAc,QACNN,SAASC,eAAe,WAAWI,MAAMC,QAAU,OACnDC,EAAqBC,MAAQ,EAChC,KAGLU,OAAOhB,iBAAiB,QAAQ,KAC5BF,SAASC,eAAe,iBAAiBO,MAAQ,EAAE,IAGvDR,SAASC,eAAe,gBAAgBC,iBAAiB,SAASb,UAC9D,MAEMC,EAFuBU,SAASC,eAAe,iBACVO,MAAMC,OAGjD,IAAKnB,EAGD,OAFAU,SAASC,eAAe,YAAYS,UAAY,kCAChDV,SAASC,eAAe,YAAYI,MAAMC,QAAU,SAIxDa,EAAgB7B,EAAS,IAG7B,MAAM6B,EAAkB9B,MAAOC,IAI3B,GAHAU,SAASC,eAAe,YAAYI,MAAMC,QAAU,OACpDN,SAASC,eAAe,WAAWI,MAAMC,QAAU,SAE9ChB,EAID,OAHAU,SAASC,eAAe,YAAYS,UAAY,6BAChDV,SAASC,eAAe,YAAYI,MAAMC,QAAU,aACpDN,SAASC,eAAe,WAAWI,MAAMC,QAAU,QAIvD,IACI,MAAMZ,QAAaN,EAAUE,GACvBqB,EAAgBC,EAAmBlB,GACzCmB,EAASF,GACTxB,EAAc,EAEd,MAAM2B,QAAqBC,EAAkBzB,GAC7C0B,EAAmBF,GAEnBG,EAAkB3B,EACrB,CAAC,MAAOM,GACLI,SAASC,eAAe,YAAYS,UAAYd,EAChDI,SAASC,eAAe,YAAYI,MAAMC,QAAU,OAC5D,CAAc,QACNN,SAASC,eAAe,WAAWI,MAAMC,QAAU,OACnDN,SAASC,eAAe,iBAAiBO,MAAQ,EACpD,GAGLU,OAAOhB,iBAAiB,QAAQ,KAC5BiB,EAAgB,UAAU,IAG9BnB,SAASC,eAAe,gBAAgBC,iBAAiB,SAAS,KAC9DF,SAASC,eAAe,iBAAiBO,MAAQ,EAAE,IAIvD,MAAMO,EAAoB1B,MAAOC,IAC7B,IACI,MAAME,QAAiBC,MACnB,mDAAmDP,OAAaI,6BAEpE,IAAKE,EAAS4B,GACV,MAAM,IAAIvB,MAAM,wCAGpB,aADmBL,EAASG,QAChB0B,SAASC,WACxB,CAAC,MAAO1B,GACL,MAAMA,CACT,GAGCoB,EAAsBF,IACxB,MAAMS,EAAoBvB,SAASwB,cAAc,uBACjDD,EAAkBE,UAAY,GAE9BX,EAAaY,SAASC,IAClB,MAAMC,EAAkB5B,SAAS6B,cAAc,OAC/CD,EAAgBE,UAAUC,IAAI,gBAE9B,MACMC,EADO,IAAIC,KAAKN,EAAIO,MACHC,mBAAmB,QAAS,CAAEC,QAAS,SACxDC,EAAUV,EAAIA,IAAIW,UAAUC,KAC5BC,EAAUb,EAAIA,IAAIc,UAClBC,EAAUf,EAAIA,IAAIgB,UAExBf,EAAgBH,UAAY,4EAERY,2IAGqBL,2DACAQ,SAAeE,0CAIxDnB,EAAkBqB,YAAYhB,EAAgB,GAChD,EAGAhB,EAAsBlB,IACxB,MAAMmD,EAAUnD,EAAKmD,QACfxB,EAAW3B,EAAK2B,SAASC,YAAY,GAE3C,MAAO,CACHhC,SAAU,GAAGI,EAAKJ,SAASwD,OAC3BC,YAAaF,EAAQG,OACrBC,UAAWJ,EAAQK,YACnBC,GAAIN,EAAQM,GACZC,YAAaP,EAAQP,UAAUe,KAC/BC,SAAUT,EAAQS,SAClBC,UAAWV,EAAQW,SACnBjB,KAAMM,EAAQP,UAAUC,KACxBkB,qBAAsBpC,EAASM,IAAI8B,qBACnCC,qBAAsBrC,EAASM,IAAI+B,qBACnCC,gBAAiBtC,EAASuC,KAC7B,EAGC/C,EAAYnB,IACdM,SAASC,eAAe,YAAY4D,YAAcnE,EAAKJ,SACvDU,SAASC,eAAe,eAAe4D,YAAc,GAAGnE,EAAKqD,gBAC7D/C,SAASC,eAAe,kBAAkB4D,YAAc,GAAGnE,EAAKuD,cAChEjD,SAASC,eAAe,gBAAgB4D,YAAcnE,EAAKyD,GAC3DnD,SAASC,eAAe,eAAe4D,YAAcnE,EAAK0D,YAC1DpD,SAASC,eAAe,iBAAiB4D,YAAc,GAAGnE,EAAK4D,YAC/DtD,SAASC,eAAe,kBAAkB4D,YAAc,GAAGnE,EAAK6D,gBAChEvD,SAASC,eAAe,QAAQ6D,aAAa,MAAOpE,EAAK6C,MAEzDwB,IACAC,EAAsBtE,EAAKiE,iBAE3B3D,SAASC,eAAe,aAAa4D,YAAc,GACnD7D,SAASC,eAAe,aAAa4D,YAAc,EAAE,EAGnDE,EAAoB,KACtB,MAAME,EAAc,IAAIhC,KAElBiC,EAAaD,EAAY9B,mBAAmB,QAD3B,CAAEgC,KAAM,UAAWC,MAAO,OAAQzC,IAAK,YAG9D,IAAI0C,EAAQJ,EAAYK,WACxB,MAAMC,EAAUN,EAAYO,aACtBC,EAAOJ,GAAS,GAAK,KAAO,KAClCA,GAAgB,GAChBA,EAAQA,GAAgB,GAExB,MAAMK,EAAa,GAAGL,KAASE,EAAU,GAAK,IAAMA,EAAUA,IAAUE,IAExEzE,SAASC,eAAe,eAAe4D,YAAc,gBAAgBK,IACrElE,SAASC,eAAe,eAAe4D,YAAc,gBAAgBa,GAAY,EAG/EV,EAAyBW,IAC3B,MAAMpD,EAAoBvB,SAASC,eAAe,kBAClDsB,EAAkBE,UAAY,GAE9B,MAAMwC,EAAc,IAAIhC,KAClB2C,EAAcX,EAAYK,WAC1BO,EAAgBZ,EAAYO,aAElC,IAAIM,EAAWF,EAAc,EACzBC,EAAgB,IAChBC,EAAWF,GAGfD,EAAejD,SAASkC,IACpB,MAAMmB,EAAkC,IAAlBnB,EAAKoB,WAErBC,EADW,IAAIhD,KAAK8C,GACCT,WAE3B,GAAIW,GAAaH,EAAU,CACvB,MAAMI,EAAclF,SAAS6B,cAAc,OAC3CqD,EAAYpD,UAAUC,IAAI,wBAE1B,MAAMoD,EAAUnF,SAAS6B,cAAc,OACvCsD,EAAQrB,aAAa,MAAOF,EAAKtB,UAAUC,MAC3C4C,EAAQrB,aAAa,MAAO,gBAE5B,MAAMsB,EAAgB,GAAGH,EAAY,SAA4CA,GAAa,GAAK,KAAO,OAEpGI,EAAWrF,SAAS6B,cAAc,QACxCwD,EAASxB,YAAcuB,EAEvB,MAAME,EAAkBtF,SAAS6B,cAAc,QAC/CyD,EAAgBzB,YAAc,GAAGD,EAAKZ,WAEtCkC,EAAYtC,YAAYuC,GACxBD,EAAYtC,YAAYyC,GACxBH,EAAYtC,YAAY0C,GACxB/D,EAAkBqB,YAAYsC,GAE9BJ,GACH,IACH,EAGkB9E,SAASC,eAAe,oBAEhD,MAAMgB,EAAqB3B,IACvBG,MAAM,kDAAkDP,OAAaI,KACpEiG,MAAM/F,GAAaA,EAASG,SAC5B4F,MAAM7F,IACH,MAAMwC,EAAO,IAAID,KAAKvC,EAAKJ,SAASkG,WAE9BtB,EAAahC,EAAKC,mBAAmB,QADpB,CAAEgC,KAAM,UAAWC,MAAO,OAAQzC,IAAK,YAG9D,IAAI0C,EAAQnC,EAAKoC,WACjB,MAAMC,EAAUrC,EAAKsC,aACfC,EAAOJ,GAAS,GAAK,KAAO,KAClCA,GAAgB,GAChBA,EAAQA,GAAgB,GAExB,MAAMK,EAAa,GAAGL,KAASE,EAAU,GAAK,IAAMA,EAAUA,KAAWE,IAEzEzE,SAASC,eAAe,eAAe4D,YAAc,GAAGK,IACxDlE,SAASC,eAAe,eAAe4D,YAAc,GAAGa,GAAY,IAEvEe,OAAO7F,IACJG,QAAQH,MAAM,yCAAyCN,MAAaM,EAAME,UAAU,GACtF"}